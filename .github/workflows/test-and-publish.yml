name: Test & Publish

on: [push, pull_request]

permissions:
  contents: read

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "pypy-3.9"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install libsodium, a dependency of python-xeddsa, on ubuntu-latest
        run: sudo apt-get install -y libsodium-dev
        if: matrix.os == 'ubuntu-latest'

      - name: Install libsodium, a dependency of python-xeddsa, on macos-latest
        run: brew install libsodium
        if: matrix.os == 'macos-latest'

      - name: Install libsodium, a dependency of python-xeddsa, on windows-latest
        shell: bash
        run: |
          curl -o libsodium-1.0.18-stable-msvc.zip https://download.libsodium.org/libsodium/releases/libsodium-1.0.18-stable-msvc.zip
          unzip libsodium-1.0.18-stable-msvc.zip
          mv libsodium/x64/Release/v141/static/libsodium.lib libxeddsa/
          mv libsodium/x64/Release/v141/dynamic/libsodium.dll /c/Windows/System32/
        if: matrix.os == 'windows-latest'

      - name: Install/update package management dependencies
        run: python -m pip install --upgrade pip setuptools wheel
      - name: Build and install python-xeddsa
        run: pip install .
      - name: Install test dependencies
        run: pip install --upgrade pytest pytest-cov mypy pylint flake8

      - name: Type-check using mypy
        shell: bash
        run: MYPYPATH=stubs/ mypy --strict xeddsa/ setup.py libxeddsa/ tests/
      - name: Lint using pylint
        run: pylint xeddsa/ setup.py libxeddsa/ tests/
      - name: Format-check using Flake8
        run: flake8 xeddsa/ setup.py libxeddsa/ tests/
      - name: Test using pytest
        run: pytest --cov=xeddsa --cov-report term-missing:skip-covered

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2.1.0
        with:
          platforms: all

      - name: Build wheels using cibuildwheel
        uses: pypa/cibuildwheel@v2.11.2
        env:
          CIBW_ARCHS_LINUX: auto aarch64
          CIBW_ARCHS_MACOS: x86_64 arm64

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Build source distribution
        run: python3 setup.py sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  publish:
    needs: [test, build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.5.1
        with:
          user: __token__
          password: ${{ secrets.pypi_token }}
